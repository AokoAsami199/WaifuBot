// Code generated by go-mockgen 1.1.2; DO NOT EDIT.

package discord

import (
	"sync"

	anilist "github.com/Karitham/WaifuBot/service/anilist"
)

// MockAnimeSearcher is a mock implementation of the animeSearcher interface
// (from the package github.com/Karitham/WaifuBot/discord) used for unit
// testing.
type MockAnimeSearcher struct {
	// AnimeFunc is an instance of a mock function object controlling the
	// behavior of the method Anime.
	AnimeFunc *AnimeSearcherAnimeFunc
}

// NewMockAnimeSearcher creates a new mock of the animeSearcher interface.
// All methods return zero values for all results, unless overwritten.
func NewMockAnimeSearcher() *MockAnimeSearcher {
	return &MockAnimeSearcher{
		AnimeFunc: &AnimeSearcherAnimeFunc{
			defaultHook: func(string) ([]anilist.Media, error) {
				return nil, nil
			},
		},
	}
}

// surrogateMockAnimeSearcher is a copy of the animeSearcher interface (from
// the package github.com/Karitham/WaifuBot/discord). It is redefined here
// as it is unexported in the source package.
type surrogateMockAnimeSearcher interface {
	Anime(string) ([]anilist.Media, error)
}

// NewMockAnimeSearcherFrom creates a new mock of the MockAnimeSearcher
// interface. All methods delegate to the given implementation, unless
// overwritten.
func NewMockAnimeSearcherFrom(i surrogateMockAnimeSearcher) *MockAnimeSearcher {
	return &MockAnimeSearcher{
		AnimeFunc: &AnimeSearcherAnimeFunc{
			defaultHook: i.Anime,
		},
	}
}

// AnimeSearcherAnimeFunc describes the behavior when the Anime method of
// the parent MockAnimeSearcher instance is invoked.
type AnimeSearcherAnimeFunc struct {
	defaultHook func(string) ([]anilist.Media, error)
	hooks       []func(string) ([]anilist.Media, error)
	history     []AnimeSearcherAnimeFuncCall
	mutex       sync.Mutex
}

// Anime delegates to the next hook function in the queue and stores the
// parameter and result values of this invocation.
func (m *MockAnimeSearcher) Anime(v0 string) ([]anilist.Media, error) {
	r0, r1 := m.AnimeFunc.nextHook()(v0)
	m.AnimeFunc.appendCall(AnimeSearcherAnimeFuncCall{v0, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the Anime method of the
// parent MockAnimeSearcher instance is invoked and the hook queue is empty.
func (f *AnimeSearcherAnimeFunc) SetDefaultHook(hook func(string) ([]anilist.Media, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// Anime method of the parent MockAnimeSearcher instance invokes the hook at
// the front of the queue and discards it. After the queue is empty, the
// default hook function is invoked for any future action.
func (f *AnimeSearcherAnimeFunc) PushHook(hook func(string) ([]anilist.Media, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *AnimeSearcherAnimeFunc) SetDefaultReturn(r0 []anilist.Media, r1 error) {
	f.SetDefaultHook(func(string) ([]anilist.Media, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *AnimeSearcherAnimeFunc) PushReturn(r0 []anilist.Media, r1 error) {
	f.PushHook(func(string) ([]anilist.Media, error) {
		return r0, r1
	})
}

func (f *AnimeSearcherAnimeFunc) nextHook() func(string) ([]anilist.Media, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *AnimeSearcherAnimeFunc) appendCall(r0 AnimeSearcherAnimeFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of AnimeSearcherAnimeFuncCall objects
// describing the invocations of this function.
func (f *AnimeSearcherAnimeFunc) History() []AnimeSearcherAnimeFuncCall {
	f.mutex.Lock()
	history := make([]AnimeSearcherAnimeFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// AnimeSearcherAnimeFuncCall is an object that describes an invocation of
// method Anime on an instance of MockAnimeSearcher.
type AnimeSearcherAnimeFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 string
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 []anilist.Media
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation.
func (c AnimeSearcherAnimeFuncCall) Args() []interface{} {
	return []interface{}{c.Arg0}
}

// Results returns an interface slice containing the results of this
// invocation.
func (c AnimeSearcherAnimeFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}
