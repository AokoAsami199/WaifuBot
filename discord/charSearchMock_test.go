// Code generated by go-mockgen 1.1.2; DO NOT EDIT.

package discord

import (
	"sync"

	anilist "github.com/Karitham/WaifuBot/service/anilist"
)

// MockCharSearcher is a mock implementation of the charSearcher interface
// (from the package github.com/Karitham/WaifuBot/discord) used for unit
// testing.
type MockCharSearcher struct {
	// CharacterFunc is an instance of a mock function object controlling
	// the behavior of the method Character.
	CharacterFunc *CharSearcherCharacterFunc
}

// NewMockCharSearcher creates a new mock of the charSearcher interface. All
// methods return zero values for all results, unless overwritten.
func NewMockCharSearcher() *MockCharSearcher {
	return &MockCharSearcher{
		CharacterFunc: &CharSearcherCharacterFunc{
			defaultHook: func(string) ([]anilist.Character, error) {
				return nil, nil
			},
		},
	}
}

// surrogateMockCharSearcher is a copy of the charSearcher interface (from
// the package github.com/Karitham/WaifuBot/discord). It is redefined here
// as it is unexported in the source package.
type surrogateMockCharSearcher interface {
	Character(string) ([]anilist.Character, error)
}

// NewMockCharSearcherFrom creates a new mock of the MockCharSearcher
// interface. All methods delegate to the given implementation, unless
// overwritten.
func NewMockCharSearcherFrom(i surrogateMockCharSearcher) *MockCharSearcher {
	return &MockCharSearcher{
		CharacterFunc: &CharSearcherCharacterFunc{
			defaultHook: i.Character,
		},
	}
}

// CharSearcherCharacterFunc describes the behavior when the Character
// method of the parent MockCharSearcher instance is invoked.
type CharSearcherCharacterFunc struct {
	defaultHook func(string) ([]anilist.Character, error)
	hooks       []func(string) ([]anilist.Character, error)
	history     []CharSearcherCharacterFuncCall
	mutex       sync.Mutex
}

// Character delegates to the next hook function in the queue and stores the
// parameter and result values of this invocation.
func (m *MockCharSearcher) Character(v0 string) ([]anilist.Character, error) {
	r0, r1 := m.CharacterFunc.nextHook()(v0)
	m.CharacterFunc.appendCall(CharSearcherCharacterFuncCall{v0, r0, r1})
	return r0, r1
}

// SetDefaultHook sets function that is called when the Character method of
// the parent MockCharSearcher instance is invoked and the hook queue is
// empty.
func (f *CharSearcherCharacterFunc) SetDefaultHook(hook func(string) ([]anilist.Character, error)) {
	f.defaultHook = hook
}

// PushHook adds a function to the end of hook queue. Each invocation of the
// Character method of the parent MockCharSearcher instance invokes the hook
// at the front of the queue and discards it. After the queue is empty, the
// default hook function is invoked for any future action.
func (f *CharSearcherCharacterFunc) PushHook(hook func(string) ([]anilist.Character, error)) {
	f.mutex.Lock()
	f.hooks = append(f.hooks, hook)
	f.mutex.Unlock()
}

// SetDefaultReturn calls SetDefaultDefaultHook with a function that returns
// the given values.
func (f *CharSearcherCharacterFunc) SetDefaultReturn(r0 []anilist.Character, r1 error) {
	f.SetDefaultHook(func(string) ([]anilist.Character, error) {
		return r0, r1
	})
}

// PushReturn calls PushDefaultHook with a function that returns the given
// values.
func (f *CharSearcherCharacterFunc) PushReturn(r0 []anilist.Character, r1 error) {
	f.PushHook(func(string) ([]anilist.Character, error) {
		return r0, r1
	})
}

func (f *CharSearcherCharacterFunc) nextHook() func(string) ([]anilist.Character, error) {
	f.mutex.Lock()
	defer f.mutex.Unlock()

	if len(f.hooks) == 0 {
		return f.defaultHook
	}

	hook := f.hooks[0]
	f.hooks = f.hooks[1:]
	return hook
}

func (f *CharSearcherCharacterFunc) appendCall(r0 CharSearcherCharacterFuncCall) {
	f.mutex.Lock()
	f.history = append(f.history, r0)
	f.mutex.Unlock()
}

// History returns a sequence of CharSearcherCharacterFuncCall objects
// describing the invocations of this function.
func (f *CharSearcherCharacterFunc) History() []CharSearcherCharacterFuncCall {
	f.mutex.Lock()
	history := make([]CharSearcherCharacterFuncCall, len(f.history))
	copy(history, f.history)
	f.mutex.Unlock()

	return history
}

// CharSearcherCharacterFuncCall is an object that describes an invocation
// of method Character on an instance of MockCharSearcher.
type CharSearcherCharacterFuncCall struct {
	// Arg0 is the value of the 1st argument passed to this method
	// invocation.
	Arg0 string
	// Result0 is the value of the 1st result returned from this method
	// invocation.
	Result0 []anilist.Character
	// Result1 is the value of the 2nd result returned from this method
	// invocation.
	Result1 error
}

// Args returns an interface slice containing the arguments of this
// invocation.
func (c CharSearcherCharacterFuncCall) Args() []interface{} {
	return []interface{}{c.Arg0}
}

// Results returns an interface slice containing the results of this
// invocation.
func (c CharSearcherCharacterFuncCall) Results() []interface{} {
	return []interface{}{c.Result0, c.Result1}
}
